/**
 * Problem #2 - Even Fibonacci numbers
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 *
 * Answer: 
 */
 
window.log = console.log;
 
function fib(num) {
  return (num < 3) ? num : fib(num - 1) + fib(num - 2);
}

Number.prototype.isEven = function() {
  return (this % 2 === 0) ? true : false;
};

function fibSum() {
  var i = 1,
      sum = 0,
      fibValue = fib(i),
      limit = 4000000; // 4 million
      
  while (fibValue < limit) {
    if (fibValue.isEven()) {
      sum += fibValue;
    }
    i++;
    fibValue = fib(i);  
  }
  return sum;
}

var evenFibSum = fibSum();

log(evenFibSum);
